# Production nginx configuration for use with nginx-proxy
# No SSL configuration needed - nginx-proxy handles SSL termination
# Proxy cache configuration for dynamic content
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=static_cache:10m max_size=1g inactive=60m use_temp_path=off;

# Main server block - HTTP only (nginx-proxy handles HTTPS)
server {
    listen 80 default_server;
    server_name _;
    
    # Enhanced gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/xml+rss
        application/javascript
        application/atom+xml
        image/svg+xml
        application/json
        application/ld+json
        application/manifest+json
        font/woff
        font/woff2;

    # Enhanced logging for debugging
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;

    # Improved timeout settings
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 65s;
    send_timeout 60s;

    # Security headers (nginx-proxy will handle HTTPS security headers)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Serve static files directly with resource hints
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri.html $uri/ /index.html;
        
        # Enhanced security and cache headers for HTML files
        location ~* \.html$ {
            add_header Cache-Control "public, max-age=3600, must-revalidate";
            
            # Resource hints for performance (replaces HTTP/2 push)
            add_header Link "</static/css/main.css>; rel=preload; as=style" always;
            add_header Link "</static/js/main.js>; rel=preload; as=script" always;
            add_header Link "</favicon.png>; rel=preload; as=image" always;
            
            etag on;
        }
    }

    # Enhanced cache control for static assets
    location ~* \.(jpg|jpeg|png|gif|ico|webp|svg)$ {
        root /usr/share/nginx/html;
        expires 30d;
        add_header Cache-Control "public, no-transform, max-age=2592000";
        add_header Vary Accept-Encoding;
        access_log off;
    }

    # CSS and JavaScript files cache
    location ~* \.(css|js)$ {
        root /usr/share/nginx/html;
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
        add_header Vary Accept-Encoding;
        access_log off;
    }

    # Font files cache
    location ~* \.(woff|woff2|ttf|eot|otf)$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable, max-age=31536000";
        add_header Vary Accept-Encoding;
        access_log off;
    }

    # JSON and manifest files cache
    location ~* \.(json|xml|txt)$ {
        root /usr/share/nginx/html;
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
        add_header Vary Accept-Encoding;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 'healthy';
        add_header Content-Type text/plain;
    }

    # Block WordPress/scanner attempts
    location ~* /(wp-admin|wp-includes|xmlrpc\.php|wordpress) {
        access_log off;
        return 404;
    }
}
