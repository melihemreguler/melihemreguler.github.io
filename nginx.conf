# Production SSL-ready nginx configuration
# Proxy cache configuration for dynamic content
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=static_cache:10m max_size=1g inactive=60m use_temp_path=off;

# SSL Session Cache Configuration for high performance
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 1d;
ssl_session_tickets off;

# Production server block with SSL/TLS optimization
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name melihemre.dev www.melihemre.dev;

    # SSL Configuration
    ssl_certificate /etc/ssl/certs/melihemre.dev.crt;
    ssl_certificate_key /etc/ssl/private/melihemre.dev.key;
    
    # Modern SSL Security Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # OCSP Stapling for faster SSL verification
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Cloudflare real IP configuration (if using Cloudflare)
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    # Maximum security headers for HTTPS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:;" always;

    # Main location with resource hints (replaces HTTP/2 push)
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri.html $uri/ /index.html;
        
        # Resource hints for critical resources
        location ~* \.html$ {
            add_header Cache-Control "public, max-age=3600, must-revalidate";
            add_header Link "</static/css/main.css>; rel=preload; as=style" always;
            add_header Link "</static/js/main.js>; rel=preload; as=script" always;
            add_header Link "</favicon.png>; rel=preload; as=image" always;
            etag on;
        }
    }

    # Static assets with aggressive caching
    location ~* \.(jpg|jpeg|png|gif|ico|webp|svg)$ {
        root /usr/share/nginx/html;
        expires 30d;
        add_header Cache-Control "public, no-transform, max-age=2592000";
        add_header Vary Accept-Encoding;
        access_log off;
    }

    # CSS and JavaScript with moderate caching
    location ~* \.(css|js)$ {
        root /usr/share/nginx/html;
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
        add_header Vary Accept-Encoding;
        access_log off;
    }

    # Font files with long-term caching
    location ~* \.(woff|woff2|ttf|eot|otf)$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable, max-age=31536000";
        add_header Vary Accept-Encoding;
        access_log off;
    }

    # Manifest and config files
    location ~* \.(json|xml|txt)$ {
        root /usr/share/nginx/html;
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
        add_header Vary Accept-Encoding;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 'healthy\n';
        add_header Content-Type text/plain;
    }

    # Security: Block common attack vectors
    location ~* /(wp-admin|wp-includes|xmlrpc\.php|wordpress) {
        access_log off;
        return 404;
    }
}

# HTTP to HTTPS redirect server
server {
    listen 80;
    listen [::]:80;
    server_name melihemre.dev www.melihemre.dev;
    
    # ACME challenge location for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
    }
    
    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Development/Local server block (HTTP only - commented for production)
# Uncomment for local development without SSL
# server {
#     listen 80 default_server;
#     server_name localhost;

#     # Enhanced gzip compression for better performance
#     gzip on;
#     gzip_vary on;
#     gzip_min_length 1024;
#     gzip_comp_level 6;
#     gzip_types
#         text/plain
#         text/css
#         text/xml
#         text/javascript
#         application/xml+rss
#         application/javascript
#         application/atom+xml
#         image/svg+xml
#         application/json
#         application/ld+json
#         application/manifest+json
#         font/woff
#         font/woff2;

#     # Enhanced logging for debugging
#     access_log /var/log/nginx/access.log combined;
#     error_log /var/log/nginx/error.log warn;

#     # Improved timeout settings
#     client_max_body_size 10M;
#     client_body_timeout 60s;
#     client_header_timeout 60s;
#     keepalive_timeout 65s;
#     send_timeout 60s;

#     # ACME challenge location for SSL cert verification
#     location /.well-known/acme-challenge/ {
#         root /usr/share/nginx/html;
#     }

#     # Serve static files directly with resource hints
#     location / {
#         root /usr/share/nginx/html;
#         index index.html;
#         try_files $uri $uri.html $uri/ /index.html;
        
#         # Enhanced security and cache headers for HTML files
#         location ~* \.html$ {
#             add_header Cache-Control "public, max-age=3600, must-revalidate";
#             add_header X-Frame-Options "SAMEORIGIN" always;
#             add_header X-Content-Type-Options "nosniff" always;
#             add_header Referrer-Policy "strict-origin-when-cross-origin" always;
#             add_header X-XSS-Protection "1; mode=block" always;
            
#             # Resource hints for performance (replaces HTTP/2 push)
#             add_header Link "</static/css/main.css>; rel=preload; as=style" always;
#             add_header Link "</static/js/main.js>; rel=preload; as=script" always;
#             add_header Link "</favicon.png>; rel=preload; as=image" always;
            
#             etag on;
#         }
#     }

#     # Enhanced cache control for static assets
#     location ~* \.(jpg|jpeg|png|gif|ico|webp|svg)$ {
#         root /usr/share/nginx/html;
#         expires 30d;
#         add_header Cache-Control "public, no-transform, max-age=2592000";
#         add_header Vary Accept-Encoding;
#         access_log off;
#     }

#     # CSS and JavaScript files cache
#     location ~* \.(css|js)$ {
#         root /usr/share/nginx/html;
#         expires 7d;
#         add_header Cache-Control "public, max-age=604800";
#         add_header Vary Accept-Encoding;
#         access_log off;
#     }

#     # Font files cache
#     location ~* \.(woff|woff2|ttf|eot|otf)$ {
#         root /usr/share/nginx/html;
#         expires 1y;
#         add_header Cache-Control "public, immutable, max-age=31536000";
#         add_header Vary Accept-Encoding;
#         access_log off;
#     }

#     # JSON and manifest files cache
#     location ~* \.(json|xml|txt)$ {
#         root /usr/share/nginx/html;
#         expires 1d;
#         add_header Cache-Control "public, max-age=86400";
#         add_header Vary Accept-Encoding;
#     }

#     # Health check endpoint
#     location /health {
#         access_log off;
#         return 200 'healthy';
#         add_header Content-Type text/plain;
#     }

#     # Block WordPress/scanner attempts
#     location ~* /(wp-admin|wp-includes|xmlrpc\.php|wordpress) {
#         access_log off;
#         return 404;
#     }
# }
